name: 'üî• Firmware Build'

on:
  push:
    tags:
      - 'v*.*.*'
    branches:    
      - 'master'
    paths:
      - '**'
      - '.github/workflows/*.yml'
      - '.github/workflows/*.json'
      - '!**.md'
      - '!**.rst'
      - '!**.md'
      - '!cubeai**'
      - '!scripts**'

  pull_request:
    branches:    
      - 'master'
    paths:
      - '**'
      - '.github/workflows/*.yml'
      - '.github/workflows/*.json'
      - '!**.md'
      - '!**.rst'
      - '!**.md'
      - '!cubeai**'
      - '!scripts**'

jobs:
  build-firmware:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target:
          #- OPENMV2
          #- OPENMV3
          #- OPENMV4
          - STM32H743VGT6
          #- STM32H743XIH6
          #- OPENMV4P
          #- OPENMVPT
          #- OPENMV_RT1060
          #- OPENMV_AE3
          #- OPENMV_N6
          #- ARDUINO_PORTENTA_H7
          #- ARDUINO_GIGA
          #- ARDUINO_NICLA_VISION
          #- ARDUINO_NANO_RP2040_CONNECT
          #- ARDUINO_NANO_33_BLE_SENSE
          #- DOCKER
        profile: [0]   # default profile
        #include:
        #  - target: OPENMV_N6
        #    profile: 1
      fail-fast: false
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false


    #- name: 'üß± Update submodules'
    #  run: source tools/ci.sh && ci_update_submodules

    # 1) ÊåáÂà∞‰Ω†ÁöÑ forkÔºåÊäìÂà∞ÂèØÂàáÂàÜÊîØ/Ê®ôÁ±§ÁöÑÊ≠∑Âè≤ÔºåÁÑ∂Âæå checkout openmv-1.26.0ÔºàËá™ÂãïËæ®Ë≠ò branch Êàñ tagÔºâ
    - name: 'üß± Point micropython submodule to my fork@openmv-1.26.0'
      shell: bash
      env:
        MPY_URL: https://github.com/CCH-0319/micropython.git
        MPY_REF: openmv-1.26.0
      run: |
        set -euxo pipefail
        git submodule set-url lib/micropython "$MPY_URL"
        git submodule sync -- lib/micropython
        # ‰ª•ÂèØÂàáÊèõ‰∏çÂêå ref ÁöÑÊñπÂºèÂàùÂßãÂåñÔºà‰øùÁïôÂ§öÂàÜÊîØÊ≠∑Âè≤Ôºâ
        git submodule update --init --depth=1 --no-single-branch lib/micropython
        # ÂèñÂõûÊâÄÊúâ heads Ëàá tagsÔºåÁ¢∫‰øù‰∏ãÊ≠•ËÉΩËæ®Ë≠òËàá checkout
        git -C lib/micropython remote set-url origin "$MPY_URL"
        git -C lib/micropython fetch origin "+refs/heads/*:refs/remotes/origin/*" "+refs/tags/*:refs/tags/*" --prune
        # Ëã• ref ÊòØ„ÄåÂàÜÊîØ„Äç‚Üí ÂàáÂàÜÊîØÔºõÂê¶ÂâáË¶ñÁÇ∫„Äåtag„Äç‚Üí ÂàáÊ®ôÁ±§Ôºàdetached HEADÔºâ
        if git -C lib/micropython show-ref --verify --quiet "refs/remotes/origin/$MPY_REF"; then
          git -C lib/micropython checkout -B "$MPY_REF" "origin/$MPY_REF"
        elif git -C lib/micropython show-ref --verify --quiet "refs/tags/$MPY_REF"; then
          git -C lib/micropython checkout -q "tags/$MPY_REF"
        else
          echo "‚ùå Ref '$MPY_REF' not found on $MPY_URL"
          git -C lib/micropython ls-remote --heads --tags origin
          exit 1
        fi
        # Ëã• micropython Ë£°ÈÇÑÊúâÂ≠êÊ®°ÁµÑÔºå‰∏Ä‰ΩµÂàùÂßãÂåñ
        git -C lib/micropython submodule update --init --depth=1

    # 2) ÂÆòÊñπÂéüÊ®£ÁöÑ submodule Êõ¥Êñ∞Ôºà‰∏çÊîπÔºâ
    - name: 'üß± Update submodules (official)'
      shell: bash
      run: |
        set -euxo pipefail
        source tools/ci.sh
        ci_update_submodules

    # 3) ÂÜçÈéñ‰∏ÄÊ¨°ÔºåÈÅøÂÖç‰∏ä‰∏ÄÊ≠•Êää HEAD ÊãâÂõûÁà∂ÂÄâÂ∫´Ë®òÈåÑÁöÑ gitlink
    - name: 'üîí Ensure micropython stays on my fork@openmv-1.26.0'
      shell: bash
      env:
        MPY_URL: https://github.com/CCH-0319/micropython.git
        MPY_REF: openmv-1.26.0
      run: |
        set -euxo pipefail
        git -C lib/micropython remote set-url origin "$MPY_URL"
        git -C lib/micropython fetch origin "+refs/heads/*:refs/remotes/origin/*" "+refs/tags/*:refs/tags/*" --prune
        if git -C lib/micropython show-ref --verify --quiet "refs/remotes/origin/$MPY_REF"; then
          git -C lib/micropython checkout -B "$MPY_REF" "origin/$MPY_REF"
        else
          git -C lib/micropython checkout -q "tags/$MPY_REF"
        fi
        #ÔºàÂèØÈÅ∏ÔºâËº∏Âá∫ÁâàÊú¨‰ª•‰æøÂØ©Ê†∏
        git -C lib/micropython remote -v
        git -C lib/micropython log -1 --oneline


    - name: '‚ôª Caching dependencies'
      uses: actions/cache@v4.3.0
      id: cache
      with:
        path: |
          ~/cache/gcc
          ~/cache/llvm
          ~/cache/make
          ~/cache/stedgeai
        key: 'gcc-14.3.rel1_llvm-18.1.3_make-4.4.1_stedgeai-2.1'

    - name: 'üêç Install Python'
      uses: actions/setup-python@v6
      with:
        cache: 'pip'
        python-version: "3.12.4"

    - name: 'üõ† Install dependencies'
      run: |
        pip install -r .github/workflows/requirements.txt
        flake8 --version
        pytest --version
        vela --version

    - name: 'üõ† Install GNU Make '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_gnu_make

    - name: 'üõ† Install GCC toolchain '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_arm_gcc

    - name: 'üõ† Install LLVM toolchain '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_arm_llvm

    - name: 'üõ† Install STEdge AI tools '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_stedgeai ${HOME}/cache/stedgeai

    - name: 'üèó Build firmware'
      run: source tools/ci.sh && ci_build_target ${{ matrix.target }} ${{ matrix.profile }}

    - name: '‚¨Ü Upload artifacts'
      if: matrix.target != 'DOCKER' && matrix.profile == 0 
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}
        path: ${{ matrix.target }}
        if-no-files-found: error

  code-size-report:
    needs: build-firmware
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request'
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: '‚ôª Caching dependencies'
      uses: actions/cache@v4.3.0
      id: cache
      with:
        path: |
          ~/cache/gcc
          ~/cache/llvm
          ~/cache/make
          ~/cache/stedgeai
        key: 'gcc-14.3.rel1_llvm-18.1.3_make-4.4.1_stedgeai-2.1'

    - name: 'üêç Install Python'
      uses: actions/setup-python@v6
      with:
        cache: 'pip'
        python-version: "3.12.4"

    - name: 'üõ† Install dependencies'
      run: |
        pip install tabulate==0.9.0

    - name: '‚Üì Download artifacts'
      uses: actions/download-artifact@v5
      with:
        path: new_firmware
        merge-multiple: false

    - name: '‚Üì Download release'
      uses: robinraju/release-downloader@v1
      with:
        repository: 'openmv/openmv'
        tag: 'development'
        fileName: '*.zip'
        extract: false
        out-file-path: 'old_firmware'

    - name: 'üìù Generate report'
      run: |
        TOOLCHAIN_PATH=${HOME}/cache/gcc
        export PATH=${TOOLCHAIN_PATH}/bin:${PATH}
        python tools/code_size.py > ${GITHUB_WORKSPACE}/${{ github.event.pull_request.number }}.md

    - name: '‚¨Ü Upload report'
      uses: actions/upload-artifact@v4
      with:
        overwrite: true
        name: code-size-report
        path: ${{ github.event.pull_request.number }}.md
        if-no-files-found: error

  stable-release:
    needs: build-firmware
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: '‚Üì Download artifacts'
      uses: actions/download-artifact@v5
      with:
        path: firmware

    - name: 'üì¶ Package firmware'
      run: source tools/ci.sh && ci_package_firmware_release ${{github.ref_name}}

    - name: "‚úèÔ∏è Generate release changelog"
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v5
      with:
        toTag: ${{ github.sha }}
        configuration: '.github/workflows/changelog.json'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create stable release'
      uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836
      with:
        draft: true
        files: firmware_*.zip
        body: ${{steps.changelog.outputs.changelog}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v5
      with:
        name: firmware
        failOnError: false

  development-release:
    needs: build-firmware
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') == false
    permissions:
      contents: write
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: '‚Üì Download artifacts'
      uses: actions/download-artifact@v5
      with:
        path: firmware

    - name: 'üì¶ Package firmware'
      run: source tools/ci.sh && ci_package_firmware_development

    - name: 'üßπ Delete old release'
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        delete_release: true
        tag_name: development
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "‚úèÔ∏è Generate release changelog"
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v5
      with:
        toTag: ${{ github.sha }}
        configuration: '.github/workflows/changelog.json'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create development release'
      uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836
      with:
        draft: false
        name: Development Release
        tag_name: development
        body: |
            **‚ö†Ô∏è This is a development release, and it may be unstable.**
            ${{steps.changelog.outputs.changelog}}
        files: firmware/firmware_*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v5
      with:
        name: firmware
        failOnError: false
