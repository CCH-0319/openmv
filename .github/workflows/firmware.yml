name: 'üî• Firmware Build'

on:
  push:
    tags:
      - 'v*.*.*'
    branches:    
      - 'master'
    paths:
      - '**'
      - '.github/workflows/*.yml'
      - '.github/workflows/*.json'
      - '!**.md'
      - '!**.rst'
      - '!**.md'
      - '!cubeai**'
      - '!scripts**'

  pull_request:
    branches:    
      - 'master'
    paths:
      - '**'
      - '.github/workflows/*.yml'
      - '.github/workflows/*.json'
      - '!**.md'
      - '!**.rst'
      - '!**.md'
      - '!cubeai**'
      - '!scripts**'

jobs:
  build-firmware:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target:
          #- OPENMV2
          #- OPENMV3
          #- OPENMV4
          - OPENMV4P
          #- OPENMVPT
          #- OPENMV_RT1060
          #- OPENMV_AE3
          #- OPENMV_N6
          #- ARDUINO_PORTENTA_H7
          #- ARDUINO_GIGA
          #- ARDUINO_NICLA_VISION
          #- ARDUINO_NANO_RP2040_CONNECT
          #- ARDUINO_NANO_33_BLE_SENSE
          #- DOCKER
        profile: [0]   # default profile
        include:
          - target: OPENMV_N6
            profile: 1
      fail-fast: false
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    #- name: 'üß± Update submodules'
    #  run: source tools/ci.sh && ci_update_submodules
    - name: 'üß± Point micropython submodule to my fork@master'
      shell: bash
      run: |
        set -euxo pipefail

        # 1) Áî®„ÄåË∑ØÂæë„ÄçÊîπ URLÔºàÊúÉÂêåÊôÇÊõ¥Êñ∞ .gitmodules ËàáÊú¨Âú∞Ë®≠ÂÆöÔºâ
        git submodule set-url lib/micropython https://github.com/CCH-0319/micropython.git
        git submodule sync -- lib/micropython

        # 2) Â¶ÇÊûú‰πãÂâçÂ∑≤Ë¢´ clone Âà∞‰∏äÊ∏∏ URLÔºå‰øùÈö™Ëµ∑Ë¶ã‰πüÊää origin ÊîπÊéâÔºàÂÜ™Á≠âÔºâ
        git -C lib/micropython remote set-url origin https://github.com/CCH-0319/micropython.git || true

        # 3) ÂàùÂßãÂåñ/Êõ¥Êñ∞Ôºà‰øùÁïôÂ§öÂàÜÊîØÊ≠∑Âè≤Ôºå‰πãÂæåÊâçËÉΩ checkout ÊåáÂÆöÂàÜÊîØÔºâ
        git submodule update --init --depth=1 --no-single-branch lib/micropython

        # 4) ÂàáÂà∞‰Ω† fork ÁöÑ master ÂàÜÊîØ
        git -C lib/micropython fetch origin master --depth=50 || true
        git -C lib/micropython checkout -B master origin/master

        # 5) Ëã• micropython Ë£°Èù¢‰πüÊúâ submodulesÔºå‰∏Ä‰ΩµÂàùÂßãÂåñ
        git -C lib/micropython submodule update --init --depth=1

        # 6) È©óË≠â
        git -C lib/micropython remote -v
        git -C lib/micropython rev-parse --abbrev-ref HEAD

    - name: 'üß± Update submodules (rest)'
      shell: bash
      run: |
        set -euxo pipefail
        source tools/ci.sh
        ci_update_submodules

    - name: '‚ôª Caching dependencies'
      uses: actions/cache@v4.3.0
      id: cache
      with:
        path: |
          ~/cache/gcc
          ~/cache/llvm
          ~/cache/make
          ~/cache/stedgeai
        key: 'gcc-14.3.rel1_llvm-18.1.3_make-4.4.1_stedgeai-2.1'

    - name: 'üêç Install Python'
      uses: actions/setup-python@v6
      with:
        cache: 'pip'
        python-version: "3.12.4"

    - name: 'üõ† Install dependencies'
      run: |
        pip install -r .github/workflows/requirements.txt
        flake8 --version
        pytest --version
        vela --version

    - name: 'üõ† Install GNU Make '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_gnu_make

    - name: 'üõ† Install GCC toolchain '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_arm_gcc

    - name: 'üõ† Install LLVM toolchain '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_arm_llvm

    - name: 'üõ† Install STEdge AI tools '
      if: steps.cache.outputs.cache-hit != 'true'
      run: source tools/ci.sh && ci_install_stedgeai ${HOME}/cache/stedgeai

    - name: 'üèó Build firmware'
      run: source tools/ci.sh && ci_build_target ${{ matrix.target }} ${{ matrix.profile }}

    - name: '‚¨Ü Upload artifacts'
      if: matrix.target != 'DOCKER' && matrix.profile == 0 
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}
        path: ${{ matrix.target }}
        if-no-files-found: error

  code-size-report:
    needs: build-firmware
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request'
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: '‚ôª Caching dependencies'
      uses: actions/cache@v4.3.0
      id: cache
      with:
        path: |
          ~/cache/gcc
          ~/cache/llvm
          ~/cache/make
          ~/cache/stedgeai
        key: 'gcc-14.3.rel1_llvm-18.1.3_make-4.4.1_stedgeai-2.1'

    - name: 'üêç Install Python'
      uses: actions/setup-python@v6
      with:
        cache: 'pip'
        python-version: "3.12.4"

    - name: 'üõ† Install dependencies'
      run: |
        pip install tabulate==0.9.0

    - name: '‚Üì Download artifacts'
      uses: actions/download-artifact@v5
      with:
        path: new_firmware
        merge-multiple: false

    - name: '‚Üì Download release'
      uses: robinraju/release-downloader@v1
      with:
        repository: 'openmv/openmv'
        tag: 'development'
        fileName: '*.zip'
        extract: false
        out-file-path: 'old_firmware'

    - name: 'üìù Generate report'
      run: |
        TOOLCHAIN_PATH=${HOME}/cache/gcc
        export PATH=${TOOLCHAIN_PATH}/bin:${PATH}
        python tools/code_size.py > ${GITHUB_WORKSPACE}/${{ github.event.pull_request.number }}.md

    - name: '‚¨Ü Upload report'
      uses: actions/upload-artifact@v4
      with:
        overwrite: true
        name: code-size-report
        path: ${{ github.event.pull_request.number }}.md
        if-no-files-found: error

  stable-release:
    needs: build-firmware
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: '‚Üì Download artifacts'
      uses: actions/download-artifact@v5
      with:
        path: firmware

    - name: 'üì¶ Package firmware'
      run: source tools/ci.sh && ci_package_firmware_release ${{github.ref_name}}

    - name: "‚úèÔ∏è Generate release changelog"
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v5
      with:
        toTag: ${{ github.sha }}
        configuration: '.github/workflows/changelog.json'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create stable release'
      uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836
      with:
        draft: true
        files: firmware_*.zip
        body: ${{steps.changelog.outputs.changelog}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v5
      with:
        name: firmware
        failOnError: false

  development-release:
    needs: build-firmware
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') == false
    permissions:
      contents: write
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: '‚Üì Download artifacts'
      uses: actions/download-artifact@v5
      with:
        path: firmware

    - name: 'üì¶ Package firmware'
      run: source tools/ci.sh && ci_package_firmware_development

    - name: 'üßπ Delete old release'
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        delete_release: true
        tag_name: development
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "‚úèÔ∏è Generate release changelog"
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v5
      with:
        toTag: ${{ github.sha }}
        configuration: '.github/workflows/changelog.json'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create development release'
      uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836
      with:
        draft: false
        name: Development Release
        tag_name: development
        body: |
            **‚ö†Ô∏è This is a development release, and it may be unstable.**
            ${{steps.changelog.outputs.changelog}}
        files: firmware/firmware_*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v5
      with:
        name: firmware
        failOnError: false
